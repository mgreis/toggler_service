<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<!-- ~~~~~~~~~~~~~~~ -->
	<!-- ~ COORDINATES ~ -->
	<!-- ~~~~~~~~~~~~~~~ -->
	<modelVersion>4.0.0</modelVersion>
	<artifactId>ff4j-springboot</artifactId>
	<packaging>jar</packaging>

	 <parent>
		 <groupId>com.mgreis.delivery</groupId>
		 <artifactId>delivery</artifactId>
		 <version>1.0.0-SNAPSHOT</version>
		 <relativePath>../pom.xml</relativePath>
    </parent>

	<!-- ~~~~~~~~~~~~~~ -->
	<!-- ~ PROPERTIES ~ -->
	<!-- ~~~~~~~~~~~~~~ -->
	<properties>

		<docker.image.prefix>ff4j-sample-springboot</docker.image.prefix>

	</properties>

	<!-- ~~~~~~~~~~~~~~~~ -->
	<!-- ~ DEPENDENCIES ~ -->
	<!-- ~~~~~~~~~~~~~~~~ -->
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>json-model</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.version}</version>
		</dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

		<!-- Servlet -->
		<dependency>
			<artifactId>ff4j-web</artifactId>
			<groupId>org.ff4j</groupId>
			<version>${ff4j.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>jstl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- REST API (with springwebmvc) -->
		<dependency>
			<artifactId>ff4j-spring-boot-web-api</artifactId>
			<groupId>org.ff4j</groupId>
			<version>${ff4j.version}</version>
		</dependency>

		<!-- Support for tests -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Client HTTP -->
        <dependency>
            <groupId>org.ff4j</groupId>
            <artifactId>ff4j-webapi-jersey2x</artifactId>
            <scope>test</scope>
            <version>${ff4j.version}</version>
        </dependency>
		<!--Swagger-->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-swagger2.version}</version>
			<scope>compile</scope>
		</dependency>

	</dependencies>

	<build>
	 <outputDirectory>target/classes</outputDirectory>
        <sourceDirectory>src/main/java</sourceDirectory>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <testSource>1.8</testSource>
                    <testTarget>1.8</testTarget>
                </configuration>
            </plugin>

			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>com.mgreis.delivery.Application</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- copy dependencies into the resources dir -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>compile</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dckr/resources</outputDirectory>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>

            <!-- copy dockerfile & resources -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-dockerfile</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dckr</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/dckr</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.16.9</version>
				<configuration>
					<images>
						<image>
							<name>ff4j-springboot:${project.version}</name>
							<alias>ff4j-springboot-dockerimage</alias>
							<build>
								<dockerFileDir>${project.build.directory}/dckr/</dockerFileDir>
							</build>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>stop</goal>
							<goal>build</goal>
							<goal>start</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
